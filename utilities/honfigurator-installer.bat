@echo off

:: BatchGotAdmin
:-------------------------------------
REM  --> Check for permissions
>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"

REM --> If error flag set, we do not have admin.
if '%errorlevel%' NEQ '0' (
    echo Requesting administrative privileges...
    goto UACPrompt
) else ( goto gotAdmin )

:UACPrompt
    echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
    set params = %*:"=""
    echo UAC.ShellExecute "cmd.exe", "/c %~s0 %params%", "", "runas", 1 >> "%temp%\getadmin.vbs"

    "%temp%\getadmin.vbs"
    del "%temp%\getadmin.vbs"
    exit /B

:gotAdmin
    pushd "%CD%"
    CD /D "%~dp0"
:--------------------------------------
echo I2F0IHRvcCBvZiBzY3JpcHQKaWYgKCEKICAgICNjdXJyZW50IHJvbGUKICAgIChOZXctT2JqZWN0IFNlY3VyaXR5LlByaW5jaXBhbC5XaW5kb3dzUHJpbmNpcGFsKAogICAgICAgIFtTZWN1cml0eS5QcmluY2lwYWwuV2luZG93c0lkZW50aXR5XTo6R2V0Q3VycmVudCgpCiAgICAjaXMgYWRtaW4/CiAgICApKS5Jc0luUm9sZSgKICAgICAgICBbU2VjdXJpdHkuUHJpbmNpcGFsLldpbmRvd3NCdWlsdEluUm9sZV06OkFkbWluaXN0cmF0b3IKICAgICkKKSB7CiAgICAjZWxldmF0ZSBzY3JpcHQgYW5kIGV4aXQgY3VycmVudCBub24tZWxldmF0ZWQgcnVudGltZQogICAgU3RhcnQtUHJvY2VzcyBgCiAgICAgICAgLUZpbGVQYXRoICdwb3dlcnNoZWxsJyBgCiAgICAgICAgLUFyZ3VtZW50TGlzdCAoCiAgICAgICAgICAgICNmbGF0dGVuIHRvIHNpbmdsZSBhcnJheQogICAgICAgICAgICAnLUZpbGUnLCAkTXlJbnZvY2F0aW9uLk15Q29tbWFuZC5Tb3VyY2UsICRhcmdzIGAKICAgICAgICAgICAgfCAleyAkXyB9CiAgICAgICAgKSBgCiAgICAgICAgLVZlcmIgUnVuQXMKICAgIGV4aXQKfQpmdW5jdGlvbiBJbnNlcnQtQ29udGVudCAoJGZpbGUpIHsKICAgIEJFR0lOIHsKICAgICRjb250ZW50ID0gR2V0LUNvbnRlbnQgJGZpbGUKICAgIH0KICAgIFBST0NFU1MgewogICAgJF8gfCBTZXQtQ29udGVudCAkZmlsZQogICAgfQogICAgRU5EIHsKICAgICRjb250ZW50IHwgQWRkLUNvbnRlbnQgJGZpbGUKICAgIH0KfQpGdW5jdGlvbiBXcml0ZS1Db25maWd7CiAgICAkZmlsZSA9ICcuXEhvTmZpZ3VyYXRvclxjb25maWdcbG9jYWxfY29uZmlnLmluaScKCSRjaGVjayA9IFRlc3QtUGF0aCAkZmlsZSAtUGF0aFR5cGUgTGVhZgoJaWYgKCRjaGVjayAtZXEgJGZhbHNlKSB7CiAgICAgICAgY29weS1pdGVtIC1QYXRoICcuXEhvTmZpZ3VyYXRvclxjb25maWdcZGVmYXVsdF9jb25maWcuaW5pJyAgLURlc3RpbmF0aW9uICcuXEhvTmZpZ3VyYXRvclxjb25maWdcbG9jYWxfY29uZmlnLmluaScKICAgIH0KICAgICRJTkkgPSBHZXQtQ29udGVudCAkZmlsZQogICAgJEluaUhhc2ggPSBAe30KICAgICRJbmlUZW1wID0gQCgpCiAgICBGb3JFYWNoKCRMaW5lIGluICRJTkkpCiAgICB7CiAgICAgICAgI1dyaXRlLUhvc3QoJExpbmUpCiAgICAgICAgSWYgKCRMaW5lIC1uZSAiIiAtYW5kICRMaW5lLlN0YXJ0c1dpdGgoIlsiKSAtbmUgJFRydWUpCiAgICAgICAgewogICAgICAgICAgICAkTGluZSA9ICRsaW5lLlJlcGxhY2UoJyA9ICcsJz0nKQogICAgICAgICAgICAkSW5pVGVtcCArPSAkTGluZQogICAgICAgIH0KICAgIH0KICAgIEZvckVhY2goJExpbmUgaW4gJEluaVRlbXApIHsKICAgICAgICAkU3BsaXRBcnJheSA9ICRMaW5lLlNwbGl0KCI9IikKICAgICAgICAkSW5pSGFzaCArPSBAeyRTcGxpdEFycmF5WzBdID0gJFNwbGl0QXJyYXlbMV19CiAgICAgICAgfQogICAgJGluaUhhc2hbJ2hvbl9kaXJlY3RvcnknXT0kaG9uZGlyCiAgICAkc2IgPSBOZXctT2JqZWN0IC1UeXBlTmFtZSBTeXN0ZW0uVGV4dC5TdHJpbmdCdWlsZGVyCiAgICBmb3JlYWNoICgkbmFtZSBpbiAkSW5pSGFzaC5LZXlzKSB7CiAgICAgICAgJHZhbHVlID0gJEluaUhhc2hbJG5hbWVdCiAgICAgICAgIyB0aGUgdmFsdWUgbmVlZHMgdG8gYmUgcXVvdGVkIHdoZW46CiAgICAgICAgIyAtIGl0IGJlZ2lucyBvciBlbmRzIHdpdGggd2hpdGVzcGFjZSBjaGFyYWN0ZXJzCiAgICAgICAgIyAtIGl0IGNvbnRhaW5zIHNpbmdsZSBvciBkb3VibGUgcXVvdGUgY2hhcmFjdGVycwogICAgICAgICMgLSBpdCBjb250YWlucyBwb3NzaWJsZSBjb21tZW50IGNoYXJhY3RlcnMgKCcjJyBvciAnOycpCiAgICAgICAgaWYgKCR2YWx1ZSAtbWF0Y2ggJ15ccyt8WyM7IicnXXxccyskJykgewogICAgICAgICAgICAjIGVzY2FwZSBxdW90ZXMgaW5zaWRlIHRoZSB2YWx1ZSBhbmQgc3Vycm91bmQgdGhlIHZhbHVlIHdpdGggZG91YmxlIHF1b3RlIG1hcmtzCiAgICAgICAgICAgICR2YWx1ZSA9ICciJyArICgkdmFsdWUgLXJlcGxhY2UgJyhbIicnXSknLCAnXCQxJykgKyAnIicKICAgICAgICB9CiAgICAgICAgW3ZvaWRdJHNiLkFwcGVuZExpbmUoIiRuYW1lID0gJHZhbHVlIikKICAgIH0KICAgICRzYi5Ub1N0cmluZygpIHwgT3V0LUZpbGUgJEZpbGUKICAgIFt2b2lkXSRzYi5DbGVhcigpCiAgICAiW09QVElPTlNdIiB8IEluc2VydC1Db250ZW50ICRmaWxlCn0KCldyaXRlLUhvc3QoIkN1cnJlbnQgRGlyZWN0b3J5OiAkUFNTY3JpcHRSb290IikKY2QgJFBTU2NyaXB0Um9vdAojIyBJbnN0YWxsIENob2NvbGF0ZXkgcGFja2FnZSBtYW5hZ2VyICMjClNldC1FeGVjdXRpb25Qb2xpY3kgQnlwYXNzIC1TY29wZSBQcm9jZXNzIC1Gb3JjZTsgW1N5c3RlbS5OZXQuU2VydmljZVBvaW50TWFuYWdlcl06OlNlY3VyaXR5UHJvdG9jb2wgPSBbU3lzdGVtLk5ldC5TZXJ2aWNlUG9pbnRNYW5hZ2VyXTo6U2VjdXJpdHlQcm90b2NvbCAtYm9yIDMwNzI7IGlleCAoKE5ldy1PYmplY3QgU3lzdGVtLk5ldC5XZWJDbGllbnQpLkRvd25sb2FkU3RyaW5nKCdodHRwczovL2NvbW11bml0eS5jaG9jb2xhdGV5Lm9yZy9pbnN0YWxsLnBzMScpKSAyPiYxIHwgV3JpdGUtVmVyYm9zZQpjbHMKCldyaXRlLU91dHB1dCAiCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCkhvTmZpZ3VyYXRvciBBbGwgaW4gT25lIHNlcnZlciBpbnN0YWxsIHNjcmlwdApUaGUgbGF1bmNoZXIgd2lsbCBydW4gb25jZSB0aGUgaW5zdGFsbCBoYXMgY29tcGxldGVkCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiIKCiMjIEluc3RhbGwgcmVxdWlyZWQgc29mdHdhcmUgd2l0aCBjaG9jb2xhdGV5IC0gdGhpcyB3aWxsIGFsc28gaW5zdGFsbCB0aGUgZGVwZW5kZW5jaWVzIGZvciB0aGVzZSBwcm9ncmFtcyAjIwpXcml0ZS1PdXRwdXQgIkluc3RhbGxpbmcgZGVwZW5kZW5jaWVzIGZyb20gQ2hvY29sYXRleSIKY2hvY28gaW5zdGFsbCBweXRob24zIC15IDI+JjEgfCBXcml0ZS1WZXJib3NlICAjIyBQeXRob24gMyAtIHRvIHJ1biB0aGUgSG9OZmlndXJhdG9yIGxhdW5jaGVyIGluc3RhbGwKY2hvY28gaW5zdGFsbCBnaXQgLXkgMj4mMSB8IFdyaXRlLVZlcmJvc2UgIyMgR2l0aHViIENsaSAtIGNsb25lIHRoZSByZXF1aXJlZCByZXBvcwpjaG9jbyBpbnN0YWxsIG5zc20gLXkgMj4mMSB8IFdyaXRlLVZlcmJvc2UgIyMgTm9uLVN1Y2tpbmcgU2VydmljZSBNYW5hZ2VyIC0gZm9yIGF1dG9tYXRpbmcgc2VydmVyIHJlc3RhcnRzCgojIyBSZWZyZXNoIGVudmlyb25lbW50IHZhcmlhYmxlcyBhZnRlciBpbnN0YWxsYXRpb24gb2YgZGVwZW5kZW5jaWVzICMjCiRlbnY6Q2hvY29sYXRleUluc3RhbGwgPSBDb252ZXJ0LVBhdGggIiQoKEdldC1Db21tYW5kIGNob2NvKS5QYXRoKVwuLlwuLiIgICAKSW1wb3J0LU1vZHVsZSAiJGVudjpDaG9jb2xhdGV5SW5zdGFsbFxoZWxwZXJzXGNob2NvbGF0ZXlQcm9maWxlLnBzbTEiCnJlZnJlc2hlbnYgMj4mMSB8IFdyaXRlLVZlcmJvc2UKCiMjIENsb25lIEhvTmZpZ3VyYXRvciBmaWxlcyAjIwpXcml0ZS1PdXRwdXQgIkNsb25pbmcgSG9OZmlndXJhdG9yIGZpbGVzIgpnaXQgY2xvbmUgaHR0cHM6Ly9naXRodWIuY29tL2ZyYW5rdGhldGFuazAwMS9Ib05maWd1cmF0b3IgMj4mMSB8IFdyaXRlLVZlcmJvc2UKCiMgYXNrIHRvIGRvd25sb2FkIEhvTgokY29uZmlybWF0aW9uID0gUmVhZC1Ib3N0ICJEbyB5b3UgcmVxdWlyZSBhIGNsZWFuIEhvTiBkb3dubG9hZD8gKHkvbikiCmlmICgkY29uZmlybWF0aW9uIC1lcSAneScpIHsKICAgICMjIERvd25sb2FkIEhvTiBjbGllbnQgIyMKICAgIFdyaXRlLU91dHB1dCAiRG93bmxvYWRpbmcgSG9OIENsaWVudCB0byBjdXJyZW50IGRpcmVjdG9yeS4gVGhpcyBtYXkgdGFrZSBzb21lIHRpbWUgLSA2LjNHQiIKICAgICRVUkw9Imh0dHBzOi8vZmItZGlyZWN0LnN0cmVhbWFsbC5kYXkvYXBpL3B1YmxpYy9kbC9mWDNXbkJLbCIKICAgICRIT049Ikhlcm9lcyBvZiBOZXdlcnRoIHg2NCAtIENMRUFOIgogICAgJGhvbmRpcj0iJHB3ZFwkSE9OXCIKICAgICRwcm9ncmVzc1ByZWZlcmVuY2UgPSAnc2lsZW50bHlDb250aW51ZScKICAgIGN1cmwuZXhlIC1MIC1vICIkSE9OLnppcCIgJFVSTAogICAgIyMgRXh0cmFjdCBIb04gQ2xpZW50ICMjCiAgICBXcml0ZS1PdXRwdXQgIkV4dHJhY3RpbmcgSG9OIENsaWVudCB0byBjdXJyZW50IGRpcmVjdG9yeSIKICAgICMjIHNlcnZlciBiaW5hcnkgYWR2aXNvcnkKICAgIEV4cGFuZC1BcmNoaXZlIC1QYXRoICIkSE9OLnppcCIgLURlc3RpbmF0aW9uUGF0aCAkcHdkIDI+JjEgfCBXcml0ZS1WZXJib3NlCiAgICBybSAiJEhPTi56aXAiCiAgICBXcml0ZS1Db25maWcKICAgIFdyaXRlLUhvc3QoIlNlcnZlciBiaW5hcmllcyBtdXN0IGJlIG9idGFpbmVkIHlvdXJzZWxmIGFuZCBwbGFjZWQgaW4gJGhvbmRpciBiZWZvcmUgaG9zdGluZyBjYW4gb2NjdXIuIikKfQojIEluc3RhbGwgcHl0aG9uIHByZS1yZXF1aXNpdGVzCldyaXRlLU91dHB1dCAiSW5zdGFsbGluZyBweXRob24gZGVwZW5kZW5jaWVzIgp0cnkgewogICAgcHl0aG9uIC1tIHBpcCBpbnN0YWxsIC1yIC5cSG9OZmlndXJhdG9yXGRlcGVuZGVuY2llc1xyZXF1aXJlbWVudHMudHh0IDI+JjEgfCBXcml0ZS1WZXJib3NlCn0gY2F0Y2ggewogICAgcGlwIGluc3RhbGwgLXIgLlxIb05maWd1cmF0b3JcZGVwZW5kZW5jaWVzXHJlcXVpcmVtZW50cy50eHQgMj4mMSB8IFdyaXRlLVZlcmJvc2UKfQokaGYgPSBHZXQtTG9jYXRpb24KJGhmID0gIiRoZlxIb05maWd1cmF0b3IiCmNkICRoZgpXcml0ZS1PdXRwdXQgIkhvbmZpZ3VyYXRvciBkaXJlY3RvcnkgaXMgJGhmIgpXcml0ZS1PdXRwdXQgIkhvTiBkaXJlY3RvcnkgaXMgJGhvbmRpciIKdHJ5ewoJU3RhcnQtUHJvY2VzcyBob25maWd1cmF0b3IuZXhlCn0gY2F0Y2ggewoJcHl0aG9uIGhvbmZpZ3VyYXRvci5weQp9CldyaXRlLU91dHB1dCAiTGF1bmNoaW5nIEhvTmZpZ3VyYXRvciAtIHlvdSBtYXkgbm93IGNsb3NlIHRoaXMgd2luZG93IgpwYXVzZQ== > tmp.txt
certutil -f -decode tmp.txt HoNfigurator-Installer.ps1
del tmp.txt
C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -ExecutionPolicy Bypass -File Honfigurator-Installer.ps1
pause
